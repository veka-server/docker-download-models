name: Build, Scan & Push Docker Image on Release

on:
  release:
    types: [published]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout du repo
      - name: Checkout repository
        uses: actions/checkout@v5

      # 2️⃣ Log in au registre GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # 3️⃣ Définir les variables d'image dynamiquement
      - name: Set image tags
        run: |
          TAG=${GITHUB_REF##*/}
          REPO_NAME=${GITHUB_REPOSITORY##*/}     # récupère le nom du repo
          IMAGE="ghcr.io/${{ github.repository_owner }}/$REPO_NAME:$TAG"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      # 4️⃣ Build de l'image Docker
      - name: Build Docker image
        run: docker build -t $IMAGE .
    
      # 5️⃣ Scan de l'image avec Trivy
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.IMAGE }}
          format: table
          exit-code: 1
          severity: HIGH,CRITICAL
          vuln-type: os,library
          ignore-unfixed: false
          timeout: 5m

      # 6️⃣ Push de l'image seulement si Trivy a réussi
      - name: Push Docker image
        run: |
          docker push $IMAGE
          docker tag $IMAGE ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest
          docker push ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest
